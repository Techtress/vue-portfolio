import{_,o as s,c as t,a as e,t as i,F as c,g as d,A as b,r as y,d as v,f as h,h as u}from"./index-ad44ff29.js";const x={props:{label:{type:String,required:!0},list:{type:Array,require:!0}}},k={class:"container-fluid d-flex"},w={class:"list-unstyled d-flex flex-wrap mb-2"},S={class:"ps-3 fst-italic text-nowrap"};function C(m,p,r,n,g,f){return s(),t("div",k,[e("p",null,i(r.label)+": ",1),e("ul",w,[(s(!0),t(c,null,d(r.list,l=>(s(),t("li",S,i(l),1))),256))])])}const L=_(x,[["render",C]]),$=[{image:"portfolio.png",title:"Web Developer Portfolio",skills:["Vue.js","HTML","CSS"],libraries:["vue-router","Bootstrap 5.2","tsParticles"],description:"This is the portfolio you are looking at now! It is hand-crafted by myself using Vue.js using Bootstrap 5.2 for UI elements and flexboxing, with tsParticles for the fancy background. It is a single page app using a vue-router to switch pages. Makes use of json loading for external data such as the project cards you are reading right now!",buttons:[{label:"Source",type:"link",url:"https://github.com/Techtress/vue-portfolio"}]},{image:"2dgame.png",title:"Cave Monster Slayer - 2D Game Engine",skills:["C++","XML","2D Animation"],libraries:["SDL","expat"],description:"College project in 2019 for one of my Computer Science classes: 2D Game Engine in C++. I drew all the animations myself using Krita and a pen tablet, and programmed the entire game engine myself using the SDL library to help render images and play sounds.",buttons:[{label:"Source",type:"link",url:"https://github.com/Techtress/2019-Cave-Monster-Slayer"},{label:"Watch Demo",type:"video",url:"alan9.mp4"}]}],D={components:{CardList:L},setup(){return{jsonProjects:$,AssetURL:b}},data(){return{video:""}}},P=v('<div class="container-fluid px-3 px-md-5 mb-5"><div class="text-start"><h1 class="mb-3 mb-md-4">My Projects</h1><p class="fs-5"> The following items show off my coding skills and experience. Each contain a brief description with links the source code and a demo. Feel free to check them out! These represent my ability to problem-solve using various technologies, with a smooth, neatly-formatted result.</p></div><hr class="m-4 m-md-5"></div>',1),V={class:"container-fluid"},j={class:"row row-cols-1 row-cols-md-2 g-5"},M={class:"col d-flex"},T={class:"bg-softborder"},A={class:"card bg-widget h-100"},B=["src","alt"],E={class:"card-body"},I={class:"card-title"},N={class:"card-text mt-1"},F={class:"card-footer"},U={class:"container-fluid"},q={class:"row g-3 mb-3"},G={class:"col-auto"},R={class:"tech-btn-border"},W=["href"],H=["data-url"],K=e("div",{style:{height:"25vh"}},null,-1);function X(m,p,r,n,g,f){const l=y("CardList");return s(),t("div",null,[P,e("div",V,[e("div",j,[(s(!0),t(c,null,d(n.jsonProjects,o=>(s(),t("div",M,[e("div",T,[e("div",A,[e("img",{src:n.AssetURL.get(o.image,"img/projects"),class:"card-img-top",alt:o.image},null,8,B),e("div",E,[e("h5",I,i(o.title),1),h(l,{label:"Skills",list:o.skills},null,8,["list"]),h(l,{label:"Libraries",list:o.libraries},null,8,["list"]),e("p",N,i(o.description),1)]),e("div",F,[e("div",U,[e("div",q,[(s(!0),t(c,null,d(o.buttons,a=>(s(),t("div",G,[e("div",R,[a.type=="link"?(s(),t("a",{key:0,href:a.url,class:"btn tech-btn btn-secondary px-4",target:"_blank"},i(a.label),9,W)):u("",!0),a.type=="video"?(s(),t("a",{key:1,href:"#",class:"btn tech-btn btn-secondary px-4","data-bs-toggle":"modal","data-bs-target":"#videoPlayer","data-url":a.url},i(a.label),9,H)):u("",!0)])]))),256))])])])])])]))),256))]),K])])}const J=_(D,[["render",X]]);export{J as default};
